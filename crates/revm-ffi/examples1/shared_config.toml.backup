# Shared configuration for EVM benchmarks
# This file defines common parameters used across all three benchmark implementations:
# - benchmark_bsc_call_ffi (Go + FFI)
# - benchmark_bsc_call_evm (Go + geth)  
# - benchmark_pure_revm (Rust + REVM)

[network]
chain_id = 97  # BSC Testnet
spec_id = "Cancun"  # Hardfork specification

[addresses]
deployer = "0x742d35Cc6634C0532925a3b8D4C9db96c4b4d8b6"
alice = "0x8ba1f109551bD432803012645aac136c12345678"
# Recipients will be generated: 0x1000000000000000000000000000000000000001 to 0x1000000000000000000000000000000000001000
start_recipient = "0x1000000000000000000000000000000000000001"

[benchmark]
transfer_count = 1000
transfer_amount = "1000000000000000000"  # 1 token (18 decimals)
total_supply = "1000000000000000000000000000"  # 1 billion tokens

[contracts]
# Simple ERC20 with mint function
erc20_bytecode = "6080604052348015600e575f5ffd5b506105348061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c806318160ddd1461004e57806340c10f191461006c57806370a0823114610088578063a9059cbb146100b8575b5f5ffd5b6100566100e8565b60405161006391906102b6565b60405180910390f35b61008660048036038101906100819190610357565b6100ee565b005b6100a2600480360381019061009d9190610395565b61015c565b6040516100af91906102b6565b60405180910390f35b6100d260048036038101906100cd9190610357565b610170565b6040516100df91906103da565b60405180910390f35b60015481565b8060015f8282546100ff9190610420565b92505081905550805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101519190610420565b925050819055505050565b5f602052805f5260405f205f915090505481565b5f815f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156101f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e7906104ad565b60405180910390fd5b815f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461023b91906104cb565b92505081905550815f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461028d9190610420565b925050819055506001905092915050565b5f819050919050565b6102b08161029e565b82525050565b5f6020820190506102c95f8301846102a7565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102fc826102d3565b9050919050565b61030c816102f2565b8114610316575f5ffd5b50565b5f8135905061032781610303565b92915050565b6103368161029e565b8114610340575f5ffd5b50565b5f813590506103518161032d565b92915050565b5f5f6040838503121561036d5761036c6102cf565b5b5f61037a85828601610319565b925050602061038b85828601610343565b9150509250929050565b5f602082840312156103aa576103a96102cf565b5b5f6103b784828501610319565b91505092915050565b5f8115159050919050565b6103d4816103c0565b82525050565b5f6020820190506103ed5f8301846103cb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61042a8261029e565b91506104358361029e565b925082820190508082111561044d5761044c6103f3565b5b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610497601483610453565b91506104a282610463565b602082019050919050565b5f6020820190508181035f8301526104c48161048b565b9050919050565b5f6104d58261029e565b91506104e08361029e565b92508282039050818111156104f8576104f76103f3565b5b9291505056fea2646970667358221220cb19b4849bfce8663cd0287ac9f324dbeeb9b43d26a167e5a17d8452191f599d64736f6c634300081c0033"

# Batch transfer utility contract that performs multiple transfers in a single call
batch_transfer_bytecode = "6080604052348015600e575f5ffd5b506105f78061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80631d29e56e1461004e57806353290b4414610063578063b6b6a10114610088578063f8b2cb4f1461009b575b5f5ffd5b61006161005c366004610421565b6100ae565b005b610076610071366004610460565b6101e1565b60405190815260200160405180910390f35b610061610096366004610491565b610255565b6100766100a9366004610519565b61039e565b836001600160a01b0384165f5b84811015610194575f6100ce8284610546565b6040516323b872dd60e01b81523360048201526001600160a01b03808316602483015260448201889052919250908516906323b872dd906064016020604051808303815f875af1158015610124573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101489190610559565b61018b5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b506001016100bb565b507f7b4fb3ffa747d03664dcd3bb02933bb6ab3f5799103a30a80659a5c1aa7ecc86846101c1858261057f565b6040805192835260208301919091520160405180910390a1505050505050565b6040516370a0823160e01b81526001600160a01b0382811660048301525f91908416906370a0823190602401602060405180830381865afa158015610228573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024c9190610596565b90505b92915050565b835f5b8381101561035257816001600160a01b03166323b872dd33878785818110610282576102826105ad565b9050602002016020810190610297919061051956b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018690526064016020604051808303815f875af11580156102e8573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030c919061055956b61034a5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161018256b5010161025856b507f7b4fb3ffa747d03664dcd3bb02933bb6ab3f5799103a30a80659a5c1aa7ecc868361037f848261057f56b040805192835260208301919091520160405180910390a1505050505056b5040516370a0823160e01b81523360048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103e2573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024f919061059656b80356001600160a01b038116811461041c575f5ffd5b91905056b5f5f5f5f60808587031215610434575f5ffd5b61043d8561040656b935061044b6020860161040656b9396939550505050604082013591606001359056b5f5f60408385031215610471575f5ffd5b61047a8361040656b91506104886020840161040656b9050925092905056b5f5f5f5f606085870312156104a4575f5ffd5b6104ad8561040656b9350602085013567ffffffffffffffff8111156104c8575f5ffd5b8501601f810187136104d8575f5ffd5b803567ffffffffffffffff8111156104ee575f5ffd5b8760208260051b8401011115610502575f5ffd5b94976020919091019650939460400135939250505056b5f60208284031215610529575f5ffd5b61024c8261040656b34e487b7160e01b5f52601160045260245ffd5b8082018082111561024f5761024f61053256b5f60208284031215610569575f5ffd5b81518015158114610578575f5ffd5b939250505056b808202811582820484141761024f5761024f61053256b5f602082840312156105a6575f5ffd5b505191905056b34e487b7160e01b5f52603260045260245ffdfea26469706673582212205cf0144a4c14e2d09f0e42ca14c480e9e398af4cd7c0678f1ec6cc3adf4a68f964736f6c634300081c0033"

[function_selectors]
# ERC20 functions
erc20_mint = "40c10f19"  # mint(address,uint256)
erc20_transfer = "a9059cbb"  # transfer(address,uint256)
erc20_approve = "095ea7b3"  # approve(address,uint256)
erc20_balance_of = "70a08231"  # balanceOf(address)
erc20_total_supply = "18160ddd"  # totalSupply()

# BatchTransfer functions
batch_transfer_sequential = "1d29e56e"  # batchTransferSequential(address,address,uint256,uint256)
batch_transfer_to_list = "b6b6a101"  # batchTransferToList(address,address[],uint256)
batch_get_balance = "f8b2cb4f"  # getBalance(address)
batch_get_balance_of = "53290b44"  # getBalanceOf(address,address) 